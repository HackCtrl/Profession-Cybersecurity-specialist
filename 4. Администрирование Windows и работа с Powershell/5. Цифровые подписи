# 5. Цифровые подписи

## Введение
В рамках курса **"Администрирование Windows и работа с PowerShell"** я изучил тему **"Цифровые подписи"**, которая охватывает создание, использование и проверку цифровых подписей с помощью инструментов Windows SDK. Практическая работа включала 
работу с утилитами `makecert`, `pvk2pfx` и другими компонентами для обеспечения целостности и аутентичности цифровых документов и кода.

## Основные концепции

### 1. Цифровые подписи
- **Назначение**: Обеспечение целостности, аутентичности и невозможности отказа от авторства.
- **Пример**: Подписание исполняемых файлов, скриптов PowerShell.

### 2. Инструменты Windows SDK
- **makecert**: Создание самоподписанных сертификатов.
- **pvk2pfx**: Конвертация файлов формата `.pvk` и `.cer` в `.pfx`.
- **signtool**: Подписание файлов и проверка подписей.

### 3. Типы сертификатов
- **Самоподписанные**: Создаются для тестирования и внутреннего использования.
- **Выпущенные ЦС**: Получаются от доверенных центров сертификации.

### 4. Процесс подписания
- **Создание сертификата** → **Экспорт ключей** → **Подписание файла** → **Проверка подписи**.

## Практическая работа: Работа с цифровыми подписями

### Цель практической работы
Освоить процесс создания, использования и проверки цифровых подписей с помощью инструментов Windows SDK.

### Задание 1. Создание самоподписанного сертификата

#### Что нужно сделать
1. Создать самоподписанный сертификат с помощью `makecert`.
2. Экспортировать ключи в формате `.pfx` с помощью `pvk2pfx`.

#### Шаги выполнения

1. **Создание сертификата**:
    >> makecert -n "CN=MyTestCertificate" -r -sv MyKey.pvk MyCert.cer
    
-n: Указание имени сертификата.
-r: Создание самоподписанного сертификата.
-sv: Сохранение закрытого ключа в файл .pvk.

### Конвертация в .pfx:
    >> pvk2pfx -pvk MyKey.pvk -spc MyCert.cer -pfx MyCert.pfx -po mypassword
-po: Установка пароля для .pfx-файла.

### Задание 2. Подписание файла с помощью signtool
### Что нужно сделать
- Подписать исполняемый файл или скрипт PowerShell созданным сертификатом.

### Шаги выполнения
### Подписание файла:
    >> signtool sign /f MyCert.pfx /p mypassword /t http://timestamp.digicert.com MyFile.exe
- /f: Путь к .pfx-файлу.
- /p: Пароль от .pfx-файла.
- /t: Добавление метки времени.

### Задание 3. Проверка цифровой подписи
### Что нужно сделать
- Проверить подпись подписанного файла.

### Шаги выполнения
### Проверка подписи:
    >> signtool verify /v /pa MyFile.exe
- /v: Вывод подробной информации.
- /pa: Проверка аутентичности.

### Задание 4. Использование цифровых подписей в PowerShell
### Что нужно сделать
- Настроить политику выполнения PowerShell для требывания подписанных скриптов.
- Подписать скрипт PowerShell и проверить его выполнение.

### Шаги выполнения
### Настройка политики выполнения:
- Set-ExecutionPolicy AllSigned -Scope CurrentUser

### Подписание скрипта:
    >> Set-AuthenticodeSignature -FilePath .\MyScript.ps1 -Certificate (Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert)[0] -TimestampServer http://timestamp.digicert.com

### Проверка выполнения:
- Запустить скрипт и убедиться, что он выполняется только при наличии действительной подписи.

### Вывод и обобщение
### Что было изучено:
- Создание самоподписанных сертификатов с помощью makecert и pvk2pfx.
- Подписание файлов и скриптов с использованием signtool и PowerShell.

### Проверка цифровых подписей.
### Что было сделано:
- Создан самоподписанный сертификат и экспортирован в .pfx.
- Подписаны исполняемый файл и скрипт PowerShell.
- Настроена политика выполнения PowerShell для требывания подписанных скриптов.

### Результаты:
- Все задания выполнены успешно.
- Получены практические навыки работы с цифровыми подписями.

### Заключение
- Изучение темы "Цифровые подписи" позволило мне освоить ключевые аспекты обеспечения целостности и аутентичности цифровых документов и кода. Эти навыки критически важны для безопасного администрирования и разработки в среде Windows.
