# Управление вводом-выводом и конвейерная обработка в Linux

## Введение
В рамках курса по системному администрированию Linux я изучил тему управления вводом-выводом и конвейерной обработкой. Эти концепции позволяют эффективно работать с данными, передавая их между командами и 
файлами. В этой теме я освоил работу с текстовыми файлами, использование утилит для обработки данных, а также принципы конвейерной обработки.

---

## Основные концепции

### 1. Управление вводом-выводом
- **Стандартный ввод (stdin)**: Источник данных для команды.
- **Стандартный вывод (stdout)**: Результат выполнения команды.
- **Стандартный вывод ошибок (stderr)**: Вывод сообщений об ошибках.

### 2. Запись в файл
- **`>`**: Перенаправление вывода в файл (перезапись).
- **`>>`**: Перенаправление вывода в файл (добавление).

### 3. Чтение из файла
- **`<`**: Перенаправление ввода из файла.
- **`cat`**: Вывод содержимого файла.

### 4. Поиск и фильтрация
- **`grep`**: Поиск строк, соответствующих шаблону.
- **`awk`**: Язык для обработки текста и поиска шаблонов.
- **`sed`**: Потоковый редактор для обработки текста.

### 5. Конвейерная обработка
- **`|`**: Передача вывода одной команды на вход другой.
- Пример: `command1 | command2`.

### 6. Поиск информации и эксфильтрация
- **`find`**: Поиск файлов по различным критериям.
- **`tar`**: Создание архивов для эксфильтрации данных.

### 7. Разбор атак с эксфильтрацией
- Анализ методов, используемых злоумышленниками для извлечения данных.
- Примеры: использование скрытых каналов, шифрование данных.

### 8. Lateral movement
- Методы перемещения злоумышленников внутри сети.
- Примеры: использование уязвимостей, кража учетных данных.

---

## Практическая работа: Работа с текстовыми файлами

### Цели практической работы
- Научиться работать с текстовыми файлами с помощью утилит.
- Изучить популярные утилиты.
- Понять принцип работы языка поиска и обработки шаблонов AWK.

### Задание
1. Создайте или скопируйте себе на виртуальную машину [файл с текстом](https://drive.google.com/file/d/1T-Qic6C0xvXNr6jK63J_BMAUBa0W9ew8/view?usp=sharing).
2. Выведите строки с длиной более 72 символов с помощью утилиты `awk`.
3. Выведите первые две строки в обратном порядке с помощью утилит `head` и `sort`.
4. Выведите первые 10 строк файла с помощью утилиты `awk` и последние 7 строк с помощью утилиты `tail`.

### Шаги выполнения

1. **Скачивание файла**:
   - Скачайте файл с текстом по предоставленной ссылке.

2. **Вывод строк с длиной более 72 символов**:
    >> awk 'length > 72' filename.txt

### Вывод первых двух строк в обратном порядке:
    >> head -n 2 filename.txt | sort -r

### Вывод первых 10 строк и последних 7 строк:
    >> awk 'NR <= 10' filename.txt
    >> tail -n 7 filename.txt

Вывод и обобщение

### Что было изучено:
- Управление вводом-выводом в Linux.
- Использование утилит для обработки текста.
- Принципы конвейерной обработки данных.

### Что было сделано:
- Выполнены задания по обработке текстового файла.
- Использованы утилиты awk, head, sort, и tail.

### Результаты:
- Успешно выполнены все шаги практической работы.
- Освоены навыки работы с текстовыми файлами и конвейерной обработкой данных.

Заключение
В ходе изучения темы "Управление вводом-выводом и конвейерная обработка" я освоил ключевые аспекты работы с данными в Linux. Практическая работа помогла закрепить знания по использованию утилит для обработки текста и конвейерной обработки. Эти навыки важны для эффективного управления данными и выполнения задач в системном администрировании.
