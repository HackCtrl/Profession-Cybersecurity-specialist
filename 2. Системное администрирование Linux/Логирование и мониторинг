# Логирование и мониторинг в Linux

## Введение
В рамках курса по системному администрированию Linux я изучил тему логирования и мониторинга. Логирование — это процесс записи событий и сообщений, происходящих в системе, а мониторинг позволяет отслеживать 
остояние системы и её ресурсов. В этой теме я освоил работу с логами, утилитами для поиска открытых файлов и процессов, а также настройку системы логирования с помощью `rsyslog`.

---

## Основные концепции

### 1. Логирование и мониторинг
- **Логирование**: Запись событий и сообщений в файлы логов для последующего анализа.
- **Мониторинг**: Отслеживание состояния системы, ресурсов и процессов в реальном времени.

### 2. Структура `/etc`
- **Файлы конфигурации**: Хранятся в каталоге `/etc`, включая настройки системы и сервисов.
- **Примеры**: `/etc/passwd`, `/etc/group`, `/etc/rsyslog.conf`.

### 3. Поиск открытых файлов
- **Утилита `lsof`**: Позволяет найти открытые файлы и процессы.
- **Пример**: `lsof -u username` — список открытых файлов пользователя.

### 4. Мониторинг доступа к ресурсам
- **Утилиты**: `top`, `htop`, `iotop` для мониторинга использования ресурсов.
- **Пример**: `top` — отображение процессов, использующих CPU и память.

### 5. Потоки
- **Потоки ввода-вывода**: Стандартный ввод (stdin), стандартный вывод (stdout), стандартный вывод ошибок (stderr).
- **Пример**: Перенаправление вывода с помощью `>` и `>>`.

### 6. Управление ресурсами
- **Управление ресурсами**: Ограничение использования ресурсов процессами с помощью `ulimit` и `cgroups`.
- **Пример**: `ulimit -n 1024` — ограничение количества открытых файлов.

### 7. Журнал `systemd`
- **Журнал `systemd`**: Логи, управляемые системным менеджером `systemd`.
- **Пример**: `journalctl` — просмотр журналов `systemd`.

### 8. Чтение сообщений логов `rsyslogd`
- **Rsyslog**: Система логирования, которая собирает и обрабатывает логи.
- **Пример**: `tail -f /var/log/syslog` — просмотр логов в реальном времени.

### 9. Сбор данных об оборудовании
- **Утилиты**: `lshw`, `lspci`, `lsusb` для получения информации об оборудовании.
- **Пример**: `lshw` — вывод информации о аппаратном обеспечении.

### 10. Заметание следов
- **Методы заметания следов**: Удаление логов, изменение временных меток.
- **Пример**: Использование `shred` для безопасного удаления файлов.

### 11. Threat Hunting и форензика
- **Threat Hunting**: Поиск угроз и аномалий в системе.
- **Форензика**: Анализ системы для расследования инцидентов.

---

## Практическая работа: Логирование и мониторинг

### Цель задания
- Освоить работу логирования в Linux.
- Научиться искать открытые файлы и процессы.
- Познакомиться с утилитами мониторинга.

### Описание кейса
В компании произошёл инцидент, связанный с утечкой данных через открытые файлы. Вас попросили помочь в расследовании, ведь вы как системный администратор всегда в курсе того, что происходит в компьютерах ваших пользователей.

### Задание 1. Поиск открытых файлов
1. Создайте трёх пользователей с помощью утилиты `useradd`.
2. Откройте любые файлы от имени каждого пользователя.
3. Установите утилиту `lsof` от имени администратора.
4. Найдите открытые файлы, чтобы они были в виде списка на экране.
5. Выведите список всех открытых файлов пользователя.
6. Выведите список открытых сетевых сокетов и опишите свои предположения.

### Задание 2. Отображение вызовов приложений
1. Установите утилиту `ltrace`.
2. Напишите пояснение, для чего нужна эта утилита, какие задачи она выполняет и в каких ситуациях нужно ей пользоваться.
3. Запустите утилиту и опишите результат, который вы получите.

### Задание 3. Работа с логами
1. Установите сервис `rsyslog`.
2. Запустите сервис и убедитесь, что всё прошло успешно.
3. Настройте `rsyslog` и запустите его в работу.
4. Дайте краткое пояснение о результатах запуска и о том, что выводится на экран.

### Шаги выполнения

#### Задание 1. Поиск открытых файлов
1. **Создание пользователей**:
    >> sudo useradd user1
    >> sudo useradd user2
    >> sudo useradd user3

### Открытие файлов от имени пользователей:
    >> sudo -u user1 touch /home/user1/file1
    >> sudo -u user2 touch /home/user2/file2
    >> sudo -u user3 touch /home/user3/file3

### Установка утилиты lsof:
    >> sudo apt-get install lsof

### Поиск открытых файлов:
    >> lsof

### Список открытых файлов пользователя:
    >> lsof -u user1

### Список открытых сетевых сокетов:
    >> lsof -i

### Задание 2. Отображение вызовов приложений

### Установка утилиты ltrace:
    >> sudo apt-get install ltrace

### Пояснение о ltrace:
- ltrace используется для отслеживания вызовов библиотек, которые делает приложение.
- Полезен для анализа поведения программ и поиска утечек памяти.

### Запуск ltrace:
    >> ltrace ls

### Задание 3. Работа с логами

### Установка rsyslog:
    >> sudo apt-get install rsyslog

### Запуск rsyslog:
    >> sudo systemctl start rsyslog
    >> sudo systemctl enable rsyslog

### Настройка rsyslog:
    >> Редактируем файл конфигурации /etc/rsyslog.conf.

### Перезапускаем сервис:
    >> sudo systemctl restart rsyslog

### Просмотр логов:
    >> tail -f /var/log/syslog

### Вывод и обобщение

### Что было изучено:
- Работа с логами и утилитами для поиска открытых файлов и процессов.
- Настройка системы логирования с помощью rsyslog.
- Использование утилит для мониторинга системы.

### Что было сделано:
- Созданы пользователи и открыты файлы для анализа.
- Использованы утилиты lsof, ltrace и rsyslog для мониторинга и логирования. 
= Проведено расследование инцидента с утечкой данных.

### Результаты:
- Успешно выполнены все шаги практической работы.
- Освоены навыки логирования и мониторинга в Linux.

### Заключение
- В ходе изучения темы "Логирование и мониторинг" я освоил ключевые аспекты работы с логами и утилитами для мониторинга системы. Практическая работа помогла закрепить знания по поиску открытых файлов, 
анализу процессов и настройке системы логирования. Эти навыки важны для обеспечения безопасности и стабильной работы системы.
