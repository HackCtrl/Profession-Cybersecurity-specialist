# Управление процессами в Linux

## Введение
В рамках курса по системному администрированию Linux я изучил тему управления процессами. Процессы — это экземпляры выполняющихся программ, которые управляются операционной системой. В этой теме я освоил создание, 
отслеживание, остановку и управление процессами, а также работу с приоритетами и ресурсами процессов.

---

## Основные концепции

### 1. Процессы и их виды
- **Процесс**: Экземпляр выполняющейся программы.
- **Виды процессов**: Системные процессы, пользовательские процессы, фоновые процессы.

### 2. Запущенные процессы
- **Просмотр процессов**: Команда `ps` для отображения текущих процессов.
- **Пример**: `ps aux` — отображение всех процессов.

### 3. Запуск процесса
- **Запуск процесса**: Команда для запуска программы, например, `firefox`.
- **Фоновый режим**: Запуск процесса в фоне с помощью `&`.

### 4. Отслеживание процесса
- **Отслеживание процессов**: Команда `top` для мониторинга процессов в реальном времени.
- **Пример**: `top` — отображение процессов с использованием ресурсов.

### 5. Остановка и уничтожение процессов
- **Остановка процесса**: Команда `kill` для завершения процесса.
- **Пример**: `kill -9 PID` — принудительное завершение процесса.

### 6. Приоритет процессов
- **Приоритет процесса**: Управление приоритетом с помощью команды `nice` и `renice`.
- **Пример**: `nice -n 10 command` — запуск команды с пониженным приоритетом.

### 7. Исследование процесса, бэкдоры
- **Исследование процессов**: Использование команды `pstree` для отображения дерева процессов.
- **Бэкдоры**: Скрытые процессы, используемые злоумышленниками.

### 8. Обнаружение и скрытие процессов
- **Обнаружение процессов**: Использование команды `ps` и `top` для поиска подозрительных процессов.
- **Скрытие процессов**: Методы, используемые злоумышленниками для сокрытия процессов.

---

## Практическая работа: Управление процессами

### Цель практической работы
Освоить работу с процессами в операционной системе Linux.

### Задание
1. Создайте файл `proc1`. В нём должен быть список процессов пользователя `root` с сортировкой по идентификатору родительского процесса. Используйте команду `ps` и изученные утилиты.
2. Добавьте к файлу `proc1` сведения о процессе, который сейчас потребляет больше ресурсов центрального процессора. Используйте команду `ps`.
3. Запустите утилиту `top`. Изучите содержимое информационных полей утилиты. Вы должны получить информацию о степени использования ресурсов системы, времени её работы и количестве пользователей.
4. В окне терминала запустите программу `Firefox`. Используйте команду `pstree`, чтобы получить информацию о дереве процессов и идентификаторах. Найдите поддерево для `firefox` и изучите его процессы.
5. Переместите задачи с заднего плана на передний и наоборот при помощи команд `fg` и `bg` и сочетания клавиш `CTRL + C` и `CTRL + Z`.
6. Выполните команду `killall -u имя_пользователя`. Опишите, что получили.

### Шаги выполнения

1. **Создание файла `proc1`**:
    >> ps -u root --sort ppid > proc1

### Добавление сведений о процессе, потребляющем больше всего ресурсов CPU:
    >> ps -eo pid,ppid,comm,%cpu --sort=-%cpu | head -n 2 >> proc1

### Запуск утилиты top:
    >> top

### Изучите информацию о загрузке CPU, памяти, времени работы системы и количестве пользователей.

### Запуск Firefox и изучение дерева процессов:
    >> firefox &
    >> pstree -p | grep firefox

### Перемещение задач между передним и задним планом:

### Запустите процесс в фоне:
    >> sleep 100 &

### Переместите процесс на передний план:
    >> fg %1

### Остановите процесс с помощью CTRL + Z и переместите его в фон:
    >> bg %1

### Завершение процессов пользователя:
    >> killall -u username

### Опишите, какие процессы были завершены.

### Вывод и обобщение

### Что было изучено:
- Управление процессами в Linux.
- Использование команд ps, top, pstree, kill, fg, bg.
- Работа с приоритетами процессов и их завершение.

### Что было сделано:
- Создан файл с информацией о процессах.
- Изучены процессы, потребляющие больше всего ресурсов.
- Запущена программа Firefox и изучено её дерево процессов.
- Перемещены задачи между передним и задним планом.
- Завершены процессы пользователя.

### Результаты:
- Успешно выполнены все шаги практической работы.
- Освоены навыки управления процессами в Linux.

### Заключение
- В ходе изучения темы "Управление процессами в Linux" я освоил ключевые аспекты работы с процессами, включая их создание, отслеживание, остановку и управление приоритетами. Практическая работа помогла закрепить 
знания по использованию команд для управления процессами. Эти навыки важны для эффективного управления системой и обеспечения её стабильной работы.
