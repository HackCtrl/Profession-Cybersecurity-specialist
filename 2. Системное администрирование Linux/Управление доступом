# Управление доступом в Linux

## Введение
В рамках курса по системному администрированию Linux я изучил тему управления доступом. Управление доступом — это важный аспект безопасности операционной системы, который позволяет контролировать, кто и какие 
действия может выполнять с файлами и каталогами. В этой теме я освоил создание пользователей, делегирование прав, наследование прав и работу с правами суперпользователя.

---

## Основные концепции управления доступом

### 1. Создание учетной записи пользователя
- **`useradd`** — команда для создания нового пользователя.
- **`passwd`** — команда для установки пароля пользователя.

### 2. Делегирование прав
- **`chmod`** — изменяет права доступа к файлам и каталогам.
- **`chown`** — изменяет владельца файла или каталога.
- **`chgrp`** — изменяет группу файла или каталога.

### 3. Наследование прав
- Права доступа могут наследоваться от родительского каталога.
- Использование **umask** для установки прав по умолчанию для новых файлов и каталогов.

### 4. Права суперпользователя
- **`sudo`** — позволяет выполнять команды от имени суперпользователя.
- **`su`** — переключение на другого пользователя, включая root.

### 5. Вредоносное ПО
- **Характеристики вредоносного ПО**: скрытность, деструктивность, распространение.
- **Виды вредоносного ПО**: вирусы, черви, трояны, руткиты.

---

## Практическая работа: Управление доступом

### Цели практической работы
- Освоить тему управления доступом в Linux.
- Научиться создавать пользователей с определёнными правами.
- Разобраться в наследовании прав и понять, кто такой суперпользователь.

### Задание
1. Создайте пользователя с именем `linux_user`, пароль может быть любым.
2. Залогиньтесь под этим пользователем.
3. Создайте три директории и три файла.
4. Для любого файла и директории замените пользователя-владельца на исходного, которого вы используете в системе. Не забудьте, что для этого нужны права суперпользователя.
5. Перелогиньтесь на исходного пользователя.
6. Выполните команду `ls -la ~` от имени пользователя `linux_user`. Убедитесь, что изменения применились.

Пример вывода утилиты:
drwxr-xr-x 5 linux_user linux_user 4096 Mar 13 12:55 .
drwxr-xr-x 3 root root 4096 Mar 13 12:55 ..
-rw-r--r-- 1 linux_user linux_user 0 Mar 13 12:55 file1
-rw-r--r-- 1 linux_user linux_user 0 Mar 13 12:55 file2
-rw-r--r-- 1 linux_user linux_user 0 Mar 13 12:55 file3
drwxr-xr-x 2 linux_user linux_user 4096 Mar 13 12:55 dir1
drwxr-xr-x 2 linux_user linux_user 4096 Mar 13 12:55 dir2
drwxr-xr-x 2 linux_user linux_user 4096 Mar 13 12:55 dir3

### Шаги выполнения

1. **Создание пользователя**:
   >> sudo useradd linux_user
   >> sudo passwd linux_user

Логин под новым пользователем:
   >> su - linux_user

Создание директорий и файлов:
   >> mkdir dir1 dir2 dir3
   >> touch file1 file2 file3

Изменение владельца файла и директории:
   >> sudo chown исходный_пользователь file1
   >> sudo chown исходный_пользователь dir1

Перелогин на исходного пользователя:
   >> exit

Проверка изменений:
   >> sudo su - linux_user
   >> ls -la ~

Вывод и обобщение

Что было изучено:
*** Создание пользователей и управление их правами.
*** Делегирование и наследование прав доступа.
*** Работа с правами суперпользователя.

Что было сделано:
*** Создан пользователь linux_user.
*** Созданы директории и файлы, изменены их владельцы.
*** Проверены изменения с помощью команды ls -la.

Результаты:
*** Успешно выполнены все шаги практической работы.
*** Освоены навыки управления доступом в Linux.

Заключение
В ходе изучения темы "Управление доступом" я освоил ключевые аспекты управления правами пользователей в Linux. Практическая работа помогла закрепить знания по созданию пользователей, изменению прав доступа и 
работе с суперпользователем. Эти навыки важны для обеспечения безопасности и эффективного управления системой.
