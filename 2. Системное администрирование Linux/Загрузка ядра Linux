# Загрузка ядра Linux

## Введение
В рамках курса по системному администрированию Linux я изучил тему загрузки ядра Linux. Ядро — это центральная часть операционной системы, которая управляет ресурсами системы и обеспечивает взаимодействие между 
аппаратным обеспечением и программным обеспечением. В этой теме я освоил процесс загрузки ядра, работу с загрузчиками, такими как GRUB, и настройку параметров ядра.

---

## Основные концепции

### 1. Ядро Linux
- **Ядро**: Центральная часть ОС, управляющая ресурсами системы.
- **Функции ядра**: Управление памятью, процессами, устройствами и файловой системой.

### 2. Инициализация ядра Linux
- **Загрузка ядра**: Процесс запуска ядра после включения компьютера.
- **Initramfs**: Временная файловая система, используемая для загрузки ядра.

### 3. Параметры ядра Linux
- **Параметры ядра**: Настройки, которые можно передать ядру при загрузке.
- **Примеры параметров**: `root=`, `quiet`, `splash`.

### 4. Загрузчик
- **Загрузчик**: Программа, которая загружает ядро ОС в память.
- **Примеры загрузчиков**: GRUB, LILO, SYSLINUX.

### 5. GRUB (Grand Unified Bootloader)
- **GRUB**: Самый популярный загрузчик для Linux.
- **Конфигурация GRUB**: Файл `/boot/grub/grub.cfg`.

### 6. MBR (Master Boot Record)
- **MBR**: Первый сектор на жёстком диске, содержащий загрузчик.
- **Ограничения MBR**: Поддержка дисков до 2 ТБ и до 4 основных разделов.

### 7. UEFI (Unified Extensible Firmware Interface)
- **UEFI**: Современная замена BIOS, поддерживающая большие диски и больше разделов.
- **Преимущества UEFI**: Более быстрая загрузка, поддержка Secure Boot.

### 8. Безопасность ядра и модулей
- **Безопасность ядра**: Защита от уязвимостей и атак.
- **Модули ядра**: Динамически загружаемые компоненты ядра.

### 9. Шеллкоды
- **Шеллкоды**: Малые программы, используемые для эксплуатации уязвимостей.
- **Примеры использования**: Эксплуатация уязвимостей в ядре.

---

## Практическая работа: Создание загрузочной флешки Linux

### Цели практической работы
- Создать загрузочную установочную флешку Linux двумя разными способами.
- Создать установочную флешку UEFI в Windows (по желанию).

### Задание 1. Установочная флешка Linux

#### Что нужно сделать
1. **Создание флешки вручную**:
   - Используйте команду `dd` для записи образа Linux на флешку.
   - Пример команды:
     >> sudo dd if=linux.iso of=/dev/sdX bs=4M status=progress
     - Где `linux.iso` — это образ Linux, а `/dev/sdX` — устройство флешки.

2. **Создание флешки с помощью программы Etcher**:
   - Качаем программу Etcher.
   - Выбераем образ Linux и флешку, затем начинаем запись.

### Задание 2. Установочная флешка UEFI в Windows (по желанию)

#### Что нужно сделать
1. **Используем Rufus**:
   - Скачать и установите утилиту Rufus.
   - Выбираем образ Linux и флешку, затем начинаем запись.

2. **Отключение Secure Boot**:
   - Входим в BIOS/UEFI и отключаем Secure Boot.

3. **Настройка загрузки**:
   - Во вкладке Boot выставляем носитель на «первый» уровень загрузки.

4. **Перезагрузка в режиме Try Ubuntu without installing**:
   - Перезагружаем компьютер и выбираем режим Try Ubuntu without installing.

5. **Создание разделов с помощью Gparted**:
   - Запускаем Gparted и создаем необходимые разделы на диске.

---

## Вывод и обобщение

### Что было изучено:
- Процесс загрузки ядра Linux.
- Работа с загрузчиками, такими как GRUB.
- Настройка параметров ядра и создание загрузочных носителей.

### Что было сделано:
- Созданы загрузочные флешки Linux двумя способами.
- Выполнено задание по созданию установочной флешки UEFI в Windows (по желанию).

### Результаты:
- Успешно выполнены все шаги практической работы.
- Освоены навыки создания загрузочных носителей и настройки загрузки ядра.

---

## Заключение
В ходе изучения темы "Загрузка ядра Linux" я освоил ключевые аспекты загрузки ядра и создания загрузочных носителей. Практическая работа помогла закрепить знания по использованию различных методов создания 
загрузочных флешек и настройке параметров загрузки. Эти навыки важны для эффективного управления системой и установки операционных систем.
