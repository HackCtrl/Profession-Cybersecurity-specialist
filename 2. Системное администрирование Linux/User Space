# User Space в Linux

## Введение
В рамках курса по системному администрированию Linux я изучил тему User Space. User Space — это часть операционной системы, где выполняются пользовательские приложения и процессы. В этой теме я освоил управление 
системными службами с помощью `systemd`, а также изучил последовательность запуска системы, уровни выполнения (runlevels) и методы управления службами.

---

## Основные концепции

### 1. Последовательность запуска
- **Загрузка системы**: Процесс запуска системы от включения питания до загрузки пользовательских приложений.
- **Init**: Первый процесс, запускаемый ядром, который инициализирует систему.

### 2. Init
- **Init**: Традиционный системный менеджер, используемый для управления процессами и службами.
- **Примеры**: SysVinit, Upstart.

### 3. Runlevel
- **Runlevel**: Уровень выполнения системы, определяющий, какие службы и процессы запущены.
- **Примеры**: Runlevel 3 — многопользовательский режим без графического интерфейса, Runlevel 5 — многопользовательский режим с графическим интерфейсом.

### 4. Systemd
- **Systemd**: Современный системный менеджер, используемый для управления службами и процессами.
- **Преимущества**: Параллельный запуск служб, управление зависимостями, журналирование.

### 5. Выключение системы
- **Команды выключения**: `shutdown`, `reboot`, `halt`.
- **Пример**: `sudo shutdown -h now` — немедленное выключение системы.

### 6. Сохранение вредоносного кода
- **Методы сохранения**: Использование автозагрузки, скрытие в системных каталогах.
- **Примеры**: Добавление в `crontab`, использование `systemd` для автозапуска.

### 7. C&C (Command and Control)
- **C&C**: Серверы управления, используемые злоумышленниками для контроля заражённых систем.
- **Примеры**: Управление ботнетами, передача команд.

### 8. Запуск вредоносного кода
- **Методы запуска**: Использование уязвимостей, социальная инженерия.
- **Примеры**: Запуск через `systemd`, использование `cron`.

---

## Практическая работа: Управление системными службами с помощью systemd

### Цель задания
Получить навыки управления системными службами операционной системы с помощью `systemd`.

### Задание
1. Проверьте статус службы `vsftpd` с помощью команды `systemctl`. Вывод команды должен показать, что сервис отключен (так как служба не установлена).
2. Установите службу `vsftpd` с помощью команды: `sudo apt-get install vsftpd`.
3. Запустите службу с помощью команды `systemctl`.
4. Проверьте статус службы с помощью команды `systemctl`. Вывод команды должен показать, что служба запущена.
5. Добавьте службу в автозапуск при загрузке операционной системы с помощью команды `systemctl`.
6. Выведите на экран список зависимостей юнита `vsftpd` с помощью команды `systemctl`.

### Шаги выполнения

1. **Проверка статуса службы `vsftpd`**:
    >> systemctl status vsftpd

### Установка службы vsftpd:
    >> sudo apt-get install vsftpd

### Запуск службы vsftpd:
    >> sudo systemctl start vsftpd

### Проверка статуса службы vsftpd:
    >> systemctl status vsftpd

### Добавление службы в автозапуск:
    >> sudo systemctl enable vsftpd

### Вывод списка зависимостей юнита vsftpd:
    >> systemctl list-dependencies vsftpd

### Вывод и обобщение

### Что было изучено:
- Управление системными службами с помощью systemd.
- Последовательность запуска системы и уровни выполнения.
- Методы сохранения и запуска вредоносного кода.

### Что было сделано:
- Установлена и настроена служба vsftpd.
- Проверен статус службы и добавлена в автозапуск.
- Изучены зависимости юнита vsftpd.

### Результаты:
- Успешно выполнены все шаги практической работы.
- Освоены навыки управления системными службами в Linux.

### Заключение
- В ходе изучения темы "User Space" я освоил ключевые аспекты управления системными службами с помощью systemd. Практическая работа помогла закрепить знания по установке, запуску и настройке служб. 
Эти навыки важны для эффективного управления системой и обеспечения её стабильной работы.
